name: CI with SAST & SCA

on:
  push:
    branches: [ main, 'feature/**' ]
  pull_request:
    branches: [ main ]

# Нужно дать право на запись security events для upload-sarif (Code scanning)
permissions:
  contents: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-
      - name: Build (skip tests)
        run: mvn clean install -DskipTests

      # SpotBugs runs during verify phase (configured in pom). Run verify to generate SARIF.
      - name: Run SpotBugs (via mvn verify)
        run: mvn verify -DskipTests
      - name: Show spotbugs sarif file (debug)
        run: ls -la target/spotbugs.sarif || true
      - name: Upload SpotBugs SARIF Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: target/spotbugs.sarif
        continue-on-error: true

      # Cache dependency-check DB
      - name: Cache Dependency-Check Data
        uses: actions/cache@v4
        with:
          path: ~/.dependency-check-data
          key: dependency-check-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: dependency-check-${{ runner.os }}-

      # Run Dependency-Check
      - name: Run OWASP Dependency-Check
        env:
          # при наличии NVD API Key добавь его в Secrets и он будет использован
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          mvn org.owasp:dependency-check-maven:12.1.0:aggregate \
            -Dformat=HTML \
            -DoutputDirectory=target/dependency-check-report \
            -DdataDirectory=${{ runner.home }}/.dependency-check-data \
            -Dnvd.userAgent="GitHub Actions Dependency-Check" \
            -DupdateOnly=false \
            ${NVD_API_KEY:+-Dnvd.apiKey=$NVD_API_KEY}
      - name: List dependency-check outputs
        if: always()
        run: ls -R target/dependency-check-report || true
      - name: Upload Dependency-Check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: target/dependency-check-report/
      - name: Run Tests
        run: mvn test
